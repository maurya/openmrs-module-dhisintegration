//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.03.01 at 10:09:16 PM IST 
//


package org.openmrs.module.dhisintegration.api.jaxb;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="dataValue" maxOccurs="unbounded" minOccurs="0">
 *           &lt;complexType>
 *             &lt;simpleContent>
 *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
 *                 &lt;attribute name="dataElement" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="dataElementName" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="period" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="orgUnit" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="orgUnitName" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="categoryOptionCombo" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="categoryOptionComboName" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="value" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="storedBy" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="timestamp" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="comment" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="followup" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *               &lt;/extension>
 *             &lt;/simpleContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *       &lt;/sequence>
 *       &lt;attribute name="dataSet" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="dataSetName" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="completeDate" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="period" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="orgUnit" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="orgUnitName" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "dataValue"
})
@XmlRootElement(name = "dataValueSet")
public class DataValueSet
    implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    protected List<DataValueSet.DataValue> dataValue;
    @XmlAttribute(name = "dataSet")
    protected String dataSet;
    @XmlAttribute(name = "dataSetName")
    protected String dataSetName;
    @XmlAttribute(name = "completeDate")
    protected String completeDate;
    @XmlAttribute(name = "period")
    protected String period;
    @XmlAttribute(name = "orgUnit")
    protected String orgUnit;
    @XmlAttribute(name = "orgUnitName")
    protected String orgUnitName;

    /**
     * Gets the value of the dataValue property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the dataValue property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDataValue().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DataValueSet.DataValue }
     * 
     * 
     */
    public List<DataValueSet.DataValue> getDataValue() {
        if (dataValue == null) {
            dataValue = new ArrayList<DataValueSet.DataValue>();
        }
        return this.dataValue;
    }

    /**
     * Gets the value of the dataSet property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDataSet() {
        return dataSet;
    }

    /**
     * Sets the value of the dataSet property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDataSet(String value) {
        this.dataSet = value;
    }

    /**
     * Gets the value of the dataSetName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDataSetName() {
        return dataSetName;
    }

    /**
     * Sets the value of the dataSetName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDataSetName(String value) {
        this.dataSetName = value;
    }

    /**
     * Gets the value of the completeDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCompleteDate() {
        return completeDate;
    }

    /**
     * Sets the value of the completeDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCompleteDate(String value) {
        this.completeDate = value;
    }

    /**
     * Gets the value of the period property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPeriod() {
        return period;
    }

    /**
     * Sets the value of the period property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPeriod(String value) {
        this.period = value;
    }

    /**
     * Gets the value of the orgUnit property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getOrgUnit() {
        return orgUnit;
    }

    /**
     * Sets the value of the orgUnit property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOrgUnit(String value) {
        this.orgUnit = value;
    }

    /**
     * Gets the value of the orgUnitName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getOrgUnitName() {
        return orgUnitName;
    }

    /**
     * Sets the value of the orgUnitName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOrgUnitName(String value) {
        this.orgUnitName = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            List<DataValueSet.DataValue> theDataValue;
            theDataValue = (((this.dataValue!= null)&&(!this.dataValue.isEmpty()))?this.getDataValue():null);
            strategy.appendField(locator, this, "dataValue", buffer, theDataValue);
        }
        {
            String theDataSet;
            theDataSet = this.getDataSet();
            strategy.appendField(locator, this, "dataSet", buffer, theDataSet);
        }
        {
            String theDataSetName;
            theDataSetName = this.getDataSetName();
            strategy.appendField(locator, this, "dataSetName", buffer, theDataSetName);
        }
        {
            String theCompleteDate;
            theCompleteDate = this.getCompleteDate();
            strategy.appendField(locator, this, "completeDate", buffer, theCompleteDate);
        }
        {
            String thePeriod;
            thePeriod = this.getPeriod();
            strategy.appendField(locator, this, "period", buffer, thePeriod);
        }
        {
            String theOrgUnit;
            theOrgUnit = this.getOrgUnit();
            strategy.appendField(locator, this, "orgUnit", buffer, theOrgUnit);
        }
        {
            String theOrgUnitName;
            theOrgUnitName = this.getOrgUnitName();
            strategy.appendField(locator, this, "orgUnitName", buffer, theOrgUnitName);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof DataValueSet)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final DataValueSet that = ((DataValueSet) object);
        {
            List<DataValueSet.DataValue> lhsDataValue;
            lhsDataValue = (((this.dataValue!= null)&&(!this.dataValue.isEmpty()))?this.getDataValue():null);
            List<DataValueSet.DataValue> rhsDataValue;
            rhsDataValue = (((that.dataValue!= null)&&(!that.dataValue.isEmpty()))?that.getDataValue():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataValue", lhsDataValue), LocatorUtils.property(thatLocator, "dataValue", rhsDataValue), lhsDataValue, rhsDataValue)) {
                return false;
            }
        }
        {
            String lhsDataSet;
            lhsDataSet = this.getDataSet();
            String rhsDataSet;
            rhsDataSet = that.getDataSet();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataSet", lhsDataSet), LocatorUtils.property(thatLocator, "dataSet", rhsDataSet), lhsDataSet, rhsDataSet)) {
                return false;
            }
        }
        {
            String lhsDataSetName;
            lhsDataSetName = this.getDataSetName();
            String rhsDataSetName;
            rhsDataSetName = that.getDataSetName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataSetName", lhsDataSetName), LocatorUtils.property(thatLocator, "dataSetName", rhsDataSetName), lhsDataSetName, rhsDataSetName)) {
                return false;
            }
        }
        {
            String lhsCompleteDate;
            lhsCompleteDate = this.getCompleteDate();
            String rhsCompleteDate;
            rhsCompleteDate = that.getCompleteDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "completeDate", lhsCompleteDate), LocatorUtils.property(thatLocator, "completeDate", rhsCompleteDate), lhsCompleteDate, rhsCompleteDate)) {
                return false;
            }
        }
        {
            String lhsPeriod;
            lhsPeriod = this.getPeriod();
            String rhsPeriod;
            rhsPeriod = that.getPeriod();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "period", lhsPeriod), LocatorUtils.property(thatLocator, "period", rhsPeriod), lhsPeriod, rhsPeriod)) {
                return false;
            }
        }
        {
            String lhsOrgUnit;
            lhsOrgUnit = this.getOrgUnit();
            String rhsOrgUnit;
            rhsOrgUnit = that.getOrgUnit();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "orgUnit", lhsOrgUnit), LocatorUtils.property(thatLocator, "orgUnit", rhsOrgUnit), lhsOrgUnit, rhsOrgUnit)) {
                return false;
            }
        }
        {
            String lhsOrgUnitName;
            lhsOrgUnitName = this.getOrgUnitName();
            String rhsOrgUnitName;
            rhsOrgUnitName = that.getOrgUnitName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "orgUnitName", lhsOrgUnitName), LocatorUtils.property(thatLocator, "orgUnitName", rhsOrgUnitName), lhsOrgUnitName, rhsOrgUnitName)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            List<DataValueSet.DataValue> theDataValue;
            theDataValue = (((this.dataValue!= null)&&(!this.dataValue.isEmpty()))?this.getDataValue():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataValue", theDataValue), currentHashCode, theDataValue);
        }
        {
            String theDataSet;
            theDataSet = this.getDataSet();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataSet", theDataSet), currentHashCode, theDataSet);
        }
        {
            String theDataSetName;
            theDataSetName = this.getDataSetName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataSetName", theDataSetName), currentHashCode, theDataSetName);
        }
        {
            String theCompleteDate;
            theCompleteDate = this.getCompleteDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "completeDate", theCompleteDate), currentHashCode, theCompleteDate);
        }
        {
            String thePeriod;
            thePeriod = this.getPeriod();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "period", thePeriod), currentHashCode, thePeriod);
        }
        {
            String theOrgUnit;
            theOrgUnit = this.getOrgUnit();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "orgUnit", theOrgUnit), currentHashCode, theOrgUnit);
        }
        {
            String theOrgUnitName;
            theOrgUnitName = this.getOrgUnitName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "orgUnitName", theOrgUnitName), currentHashCode, theOrgUnitName);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof DataValueSet) {
            final DataValueSet copy = ((DataValueSet) draftCopy);
            if ((this.dataValue!= null)&&(!this.dataValue.isEmpty())) {
                List<DataValueSet.DataValue> sourceDataValue;
                sourceDataValue = (((this.dataValue!= null)&&(!this.dataValue.isEmpty()))?this.getDataValue():null);
                @SuppressWarnings("unchecked")
                List<DataValueSet.DataValue> copyDataValue = ((List<DataValueSet.DataValue> ) strategy.copy(LocatorUtils.property(locator, "dataValue", sourceDataValue), sourceDataValue));
                copy.dataValue = null;
                if (copyDataValue!= null) {
                    List<DataValueSet.DataValue> uniqueDataValuel = copy.getDataValue();
                    uniqueDataValuel.addAll(copyDataValue);
                }
            } else {
                copy.dataValue = null;
            }
            if (this.dataSet!= null) {
                String sourceDataSet;
                sourceDataSet = this.getDataSet();
                String copyDataSet = ((String) strategy.copy(LocatorUtils.property(locator, "dataSet", sourceDataSet), sourceDataSet));
                copy.setDataSet(copyDataSet);
            } else {
                copy.dataSet = null;
            }
            if (this.dataSetName!= null) {
                String sourceDataSetName;
                sourceDataSetName = this.getDataSetName();
                String copyDataSetName = ((String) strategy.copy(LocatorUtils.property(locator, "dataSetName", sourceDataSetName), sourceDataSetName));
                copy.setDataSetName(copyDataSetName);
            } else {
                copy.dataSetName = null;
            }
            if (this.completeDate!= null) {
                String sourceCompleteDate;
                sourceCompleteDate = this.getCompleteDate();
                String copyCompleteDate = ((String) strategy.copy(LocatorUtils.property(locator, "completeDate", sourceCompleteDate), sourceCompleteDate));
                copy.setCompleteDate(copyCompleteDate);
            } else {
                copy.completeDate = null;
            }
            if (this.period!= null) {
                String sourcePeriod;
                sourcePeriod = this.getPeriod();
                String copyPeriod = ((String) strategy.copy(LocatorUtils.property(locator, "period", sourcePeriod), sourcePeriod));
                copy.setPeriod(copyPeriod);
            } else {
                copy.period = null;
            }
            if (this.orgUnit!= null) {
                String sourceOrgUnit;
                sourceOrgUnit = this.getOrgUnit();
                String copyOrgUnit = ((String) strategy.copy(LocatorUtils.property(locator, "orgUnit", sourceOrgUnit), sourceOrgUnit));
                copy.setOrgUnit(copyOrgUnit);
            } else {
                copy.orgUnit = null;
            }
            if (this.orgUnitName!= null) {
                String sourceOrgUnitName;
                sourceOrgUnitName = this.getOrgUnitName();
                String copyOrgUnitName = ((String) strategy.copy(LocatorUtils.property(locator, "orgUnitName", sourceOrgUnitName), sourceOrgUnitName));
                copy.setOrgUnitName(copyOrgUnitName);
            } else {
                copy.orgUnitName = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new DataValueSet();
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;simpleContent>
     *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
     *       &lt;attribute name="dataElement" type="{http://www.w3.org/2001/XMLSchema}string" />
     *       &lt;attribute name="dataElementName" type="{http://www.w3.org/2001/XMLSchema}string" />
     *       &lt;attribute name="period" type="{http://www.w3.org/2001/XMLSchema}string" />
     *       &lt;attribute name="orgUnit" type="{http://www.w3.org/2001/XMLSchema}string" />
     *       &lt;attribute name="orgUnitName" type="{http://www.w3.org/2001/XMLSchema}string" />
     *       &lt;attribute name="categoryOptionCombo" type="{http://www.w3.org/2001/XMLSchema}string" />
     *       &lt;attribute name="categoryOptionComboName" type="{http://www.w3.org/2001/XMLSchema}string" />
     *       &lt;attribute name="value" type="{http://www.w3.org/2001/XMLSchema}string" />
     *       &lt;attribute name="storedBy" type="{http://www.w3.org/2001/XMLSchema}string" />
     *       &lt;attribute name="timestamp" type="{http://www.w3.org/2001/XMLSchema}string" />
     *       &lt;attribute name="comment" type="{http://www.w3.org/2001/XMLSchema}string" />
     *       &lt;attribute name="followup" type="{http://www.w3.org/2001/XMLSchema}boolean" />
     *     &lt;/extension>
     *   &lt;/simpleContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class DataValue
        implements Cloneable, CopyTo, Equals, HashCode, ToString
    {

        @XmlValue
        protected String value;
        @XmlAttribute(name = "dataElement")
        protected String dataElement;
        @XmlAttribute(name = "dataElementName")
        protected String dataElementName;
        @XmlAttribute(name = "period")
        protected String period;
        @XmlAttribute(name = "orgUnit")
        protected String orgUnit;
        @XmlAttribute(name = "orgUnitName")
        protected String orgUnitName;
        @XmlAttribute(name = "categoryOptionCombo")
        protected String categoryOptionCombo;
        @XmlAttribute(name = "categoryOptionComboName")
        protected String categoryOptionComboName;
        @XmlAttribute(name = "value")
        protected String valueAttribute;
        @XmlAttribute(name = "storedBy")
        protected String storedBy;
        @XmlAttribute(name = "timestamp")
        protected String timestamp;
        @XmlAttribute(name = "comment")
        protected String comment;
        @XmlAttribute(name = "followup")
        protected Boolean followup;

        /**
         * Gets the value of the value property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setValue(String value) {
            this.value = value;
        }

        /**
         * Gets the value of the dataElement property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDataElement() {
            return dataElement;
        }

        /**
         * Sets the value of the dataElement property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDataElement(String value) {
            this.dataElement = value;
        }

        /**
         * Gets the value of the dataElementName property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDataElementName() {
            return dataElementName;
        }

        /**
         * Sets the value of the dataElementName property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDataElementName(String value) {
            this.dataElementName = value;
        }

        /**
         * Gets the value of the period property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getPeriod() {
            return period;
        }

        /**
         * Sets the value of the period property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setPeriod(String value) {
            this.period = value;
        }

        /**
         * Gets the value of the orgUnit property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getOrgUnit() {
            return orgUnit;
        }

        /**
         * Sets the value of the orgUnit property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setOrgUnit(String value) {
            this.orgUnit = value;
        }

        /**
         * Gets the value of the orgUnitName property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getOrgUnitName() {
            return orgUnitName;
        }

        /**
         * Sets the value of the orgUnitName property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setOrgUnitName(String value) {
            this.orgUnitName = value;
        }

        /**
         * Gets the value of the categoryOptionCombo property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getCategoryOptionCombo() {
            return categoryOptionCombo;
        }

        /**
         * Sets the value of the categoryOptionCombo property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setCategoryOptionCombo(String value) {
            this.categoryOptionCombo = value;
        }

        /**
         * Gets the value of the categoryOptionComboName property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getCategoryOptionComboName() {
            return categoryOptionComboName;
        }

        /**
         * Sets the value of the categoryOptionComboName property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setCategoryOptionComboName(String value) {
            this.categoryOptionComboName = value;
        }

        /**
         * Gets the value of the valueAttribute property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValueAttribute() {
            return valueAttribute;
        }

        /**
         * Sets the value of the valueAttribute property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setValueAttribute(String value) {
            this.valueAttribute = value;
        }

        /**
         * Gets the value of the storedBy property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getStoredBy() {
            return storedBy;
        }

        /**
         * Sets the value of the storedBy property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setStoredBy(String value) {
            this.storedBy = value;
        }

        /**
         * Gets the value of the timestamp property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getTimestamp() {
            return timestamp;
        }

        /**
         * Sets the value of the timestamp property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setTimestamp(String value) {
            this.timestamp = value;
        }

        /**
         * Gets the value of the comment property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getComment() {
            return comment;
        }

        /**
         * Sets the value of the comment property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setComment(String value) {
            this.comment = value;
        }

        /**
         * Gets the value of the followup property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public Boolean isFollowup() {
            return followup;
        }

        /**
         * Sets the value of the followup property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setFollowup(Boolean value) {
            this.followup = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                String theValue;
                theValue = this.getValue();
                strategy.appendField(locator, this, "value", buffer, theValue);
            }
            {
                String theDataElement;
                theDataElement = this.getDataElement();
                strategy.appendField(locator, this, "dataElement", buffer, theDataElement);
            }
            {
                String theDataElementName;
                theDataElementName = this.getDataElementName();
                strategy.appendField(locator, this, "dataElementName", buffer, theDataElementName);
            }
            {
                String thePeriod;
                thePeriod = this.getPeriod();
                strategy.appendField(locator, this, "period", buffer, thePeriod);
            }
            {
                String theOrgUnit;
                theOrgUnit = this.getOrgUnit();
                strategy.appendField(locator, this, "orgUnit", buffer, theOrgUnit);
            }
            {
                String theOrgUnitName;
                theOrgUnitName = this.getOrgUnitName();
                strategy.appendField(locator, this, "orgUnitName", buffer, theOrgUnitName);
            }
            {
                String theCategoryOptionCombo;
                theCategoryOptionCombo = this.getCategoryOptionCombo();
                strategy.appendField(locator, this, "categoryOptionCombo", buffer, theCategoryOptionCombo);
            }
            {
                String theCategoryOptionComboName;
                theCategoryOptionComboName = this.getCategoryOptionComboName();
                strategy.appendField(locator, this, "categoryOptionComboName", buffer, theCategoryOptionComboName);
            }
            {
                String theValueAttribute;
                theValueAttribute = this.getValueAttribute();
                strategy.appendField(locator, this, "valueAttribute", buffer, theValueAttribute);
            }
            {
                String theStoredBy;
                theStoredBy = this.getStoredBy();
                strategy.appendField(locator, this, "storedBy", buffer, theStoredBy);
            }
            {
                String theTimestamp;
                theTimestamp = this.getTimestamp();
                strategy.appendField(locator, this, "timestamp", buffer, theTimestamp);
            }
            {
                String theComment;
                theComment = this.getComment();
                strategy.appendField(locator, this, "comment", buffer, theComment);
            }
            {
                Boolean theFollowup;
                theFollowup = this.isFollowup();
                strategy.appendField(locator, this, "followup", buffer, theFollowup);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof DataValueSet.DataValue)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final DataValueSet.DataValue that = ((DataValueSet.DataValue) object);
            {
                String lhsValue;
                lhsValue = this.getValue();
                String rhsValue;
                rhsValue = that.getValue();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsValue), LocatorUtils.property(thatLocator, "value", rhsValue), lhsValue, rhsValue)) {
                    return false;
                }
            }
            {
                String lhsDataElement;
                lhsDataElement = this.getDataElement();
                String rhsDataElement;
                rhsDataElement = that.getDataElement();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "dataElement", lhsDataElement), LocatorUtils.property(thatLocator, "dataElement", rhsDataElement), lhsDataElement, rhsDataElement)) {
                    return false;
                }
            }
            {
                String lhsDataElementName;
                lhsDataElementName = this.getDataElementName();
                String rhsDataElementName;
                rhsDataElementName = that.getDataElementName();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "dataElementName", lhsDataElementName), LocatorUtils.property(thatLocator, "dataElementName", rhsDataElementName), lhsDataElementName, rhsDataElementName)) {
                    return false;
                }
            }
            {
                String lhsPeriod;
                lhsPeriod = this.getPeriod();
                String rhsPeriod;
                rhsPeriod = that.getPeriod();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "period", lhsPeriod), LocatorUtils.property(thatLocator, "period", rhsPeriod), lhsPeriod, rhsPeriod)) {
                    return false;
                }
            }
            {
                String lhsOrgUnit;
                lhsOrgUnit = this.getOrgUnit();
                String rhsOrgUnit;
                rhsOrgUnit = that.getOrgUnit();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "orgUnit", lhsOrgUnit), LocatorUtils.property(thatLocator, "orgUnit", rhsOrgUnit), lhsOrgUnit, rhsOrgUnit)) {
                    return false;
                }
            }
            {
                String lhsOrgUnitName;
                lhsOrgUnitName = this.getOrgUnitName();
                String rhsOrgUnitName;
                rhsOrgUnitName = that.getOrgUnitName();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "orgUnitName", lhsOrgUnitName), LocatorUtils.property(thatLocator, "orgUnitName", rhsOrgUnitName), lhsOrgUnitName, rhsOrgUnitName)) {
                    return false;
                }
            }
            {
                String lhsCategoryOptionCombo;
                lhsCategoryOptionCombo = this.getCategoryOptionCombo();
                String rhsCategoryOptionCombo;
                rhsCategoryOptionCombo = that.getCategoryOptionCombo();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "categoryOptionCombo", lhsCategoryOptionCombo), LocatorUtils.property(thatLocator, "categoryOptionCombo", rhsCategoryOptionCombo), lhsCategoryOptionCombo, rhsCategoryOptionCombo)) {
                    return false;
                }
            }
            {
                String lhsCategoryOptionComboName;
                lhsCategoryOptionComboName = this.getCategoryOptionComboName();
                String rhsCategoryOptionComboName;
                rhsCategoryOptionComboName = that.getCategoryOptionComboName();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "categoryOptionComboName", lhsCategoryOptionComboName), LocatorUtils.property(thatLocator, "categoryOptionComboName", rhsCategoryOptionComboName), lhsCategoryOptionComboName, rhsCategoryOptionComboName)) {
                    return false;
                }
            }
            {
                String lhsValueAttribute;
                lhsValueAttribute = this.getValueAttribute();
                String rhsValueAttribute;
                rhsValueAttribute = that.getValueAttribute();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "valueAttribute", lhsValueAttribute), LocatorUtils.property(thatLocator, "valueAttribute", rhsValueAttribute), lhsValueAttribute, rhsValueAttribute)) {
                    return false;
                }
            }
            {
                String lhsStoredBy;
                lhsStoredBy = this.getStoredBy();
                String rhsStoredBy;
                rhsStoredBy = that.getStoredBy();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "storedBy", lhsStoredBy), LocatorUtils.property(thatLocator, "storedBy", rhsStoredBy), lhsStoredBy, rhsStoredBy)) {
                    return false;
                }
            }
            {
                String lhsTimestamp;
                lhsTimestamp = this.getTimestamp();
                String rhsTimestamp;
                rhsTimestamp = that.getTimestamp();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "timestamp", lhsTimestamp), LocatorUtils.property(thatLocator, "timestamp", rhsTimestamp), lhsTimestamp, rhsTimestamp)) {
                    return false;
                }
            }
            {
                String lhsComment;
                lhsComment = this.getComment();
                String rhsComment;
                rhsComment = that.getComment();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "comment", lhsComment), LocatorUtils.property(thatLocator, "comment", rhsComment), lhsComment, rhsComment)) {
                    return false;
                }
            }
            {
                Boolean lhsFollowup;
                lhsFollowup = this.isFollowup();
                Boolean rhsFollowup;
                rhsFollowup = that.isFollowup();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "followup", lhsFollowup), LocatorUtils.property(thatLocator, "followup", rhsFollowup), lhsFollowup, rhsFollowup)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                String theValue;
                theValue = this.getValue();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theValue), currentHashCode, theValue);
            }
            {
                String theDataElement;
                theDataElement = this.getDataElement();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataElement", theDataElement), currentHashCode, theDataElement);
            }
            {
                String theDataElementName;
                theDataElementName = this.getDataElementName();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataElementName", theDataElementName), currentHashCode, theDataElementName);
            }
            {
                String thePeriod;
                thePeriod = this.getPeriod();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "period", thePeriod), currentHashCode, thePeriod);
            }
            {
                String theOrgUnit;
                theOrgUnit = this.getOrgUnit();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "orgUnit", theOrgUnit), currentHashCode, theOrgUnit);
            }
            {
                String theOrgUnitName;
                theOrgUnitName = this.getOrgUnitName();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "orgUnitName", theOrgUnitName), currentHashCode, theOrgUnitName);
            }
            {
                String theCategoryOptionCombo;
                theCategoryOptionCombo = this.getCategoryOptionCombo();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "categoryOptionCombo", theCategoryOptionCombo), currentHashCode, theCategoryOptionCombo);
            }
            {
                String theCategoryOptionComboName;
                theCategoryOptionComboName = this.getCategoryOptionComboName();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "categoryOptionComboName", theCategoryOptionComboName), currentHashCode, theCategoryOptionComboName);
            }
            {
                String theValueAttribute;
                theValueAttribute = this.getValueAttribute();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valueAttribute", theValueAttribute), currentHashCode, theValueAttribute);
            }
            {
                String theStoredBy;
                theStoredBy = this.getStoredBy();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "storedBy", theStoredBy), currentHashCode, theStoredBy);
            }
            {
                String theTimestamp;
                theTimestamp = this.getTimestamp();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "timestamp", theTimestamp), currentHashCode, theTimestamp);
            }
            {
                String theComment;
                theComment = this.getComment();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "comment", theComment), currentHashCode, theComment);
            }
            {
                Boolean theFollowup;
                theFollowup = this.isFollowup();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "followup", theFollowup), currentHashCode, theFollowup);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public Object clone() {
            return copyTo(createNewInstance());
        }

        public Object copyTo(Object target) {
            final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
            return copyTo(null, target, strategy);
        }

        public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
            final Object draftCopy = ((target == null)?createNewInstance():target);
            if (draftCopy instanceof DataValueSet.DataValue) {
                final DataValueSet.DataValue copy = ((DataValueSet.DataValue) draftCopy);
                if (this.value!= null) {
                    String sourceValue;
                    sourceValue = this.getValue();
                    String copyValue = ((String) strategy.copy(LocatorUtils.property(locator, "value", sourceValue), sourceValue));
                    copy.setValue(copyValue);
                } else {
                    copy.value = null;
                }
                if (this.dataElement!= null) {
                    String sourceDataElement;
                    sourceDataElement = this.getDataElement();
                    String copyDataElement = ((String) strategy.copy(LocatorUtils.property(locator, "dataElement", sourceDataElement), sourceDataElement));
                    copy.setDataElement(copyDataElement);
                } else {
                    copy.dataElement = null;
                }
                if (this.dataElementName!= null) {
                    String sourceDataElementName;
                    sourceDataElementName = this.getDataElementName();
                    String copyDataElementName = ((String) strategy.copy(LocatorUtils.property(locator, "dataElementName", sourceDataElementName), sourceDataElementName));
                    copy.setDataElementName(copyDataElementName);
                } else {
                    copy.dataElementName = null;
                }
                if (this.period!= null) {
                    String sourcePeriod;
                    sourcePeriod = this.getPeriod();
                    String copyPeriod = ((String) strategy.copy(LocatorUtils.property(locator, "period", sourcePeriod), sourcePeriod));
                    copy.setPeriod(copyPeriod);
                } else {
                    copy.period = null;
                }
                if (this.orgUnit!= null) {
                    String sourceOrgUnit;
                    sourceOrgUnit = this.getOrgUnit();
                    String copyOrgUnit = ((String) strategy.copy(LocatorUtils.property(locator, "orgUnit", sourceOrgUnit), sourceOrgUnit));
                    copy.setOrgUnit(copyOrgUnit);
                } else {
                    copy.orgUnit = null;
                }
                if (this.orgUnitName!= null) {
                    String sourceOrgUnitName;
                    sourceOrgUnitName = this.getOrgUnitName();
                    String copyOrgUnitName = ((String) strategy.copy(LocatorUtils.property(locator, "orgUnitName", sourceOrgUnitName), sourceOrgUnitName));
                    copy.setOrgUnitName(copyOrgUnitName);
                } else {
                    copy.orgUnitName = null;
                }
                if (this.categoryOptionCombo!= null) {
                    String sourceCategoryOptionCombo;
                    sourceCategoryOptionCombo = this.getCategoryOptionCombo();
                    String copyCategoryOptionCombo = ((String) strategy.copy(LocatorUtils.property(locator, "categoryOptionCombo", sourceCategoryOptionCombo), sourceCategoryOptionCombo));
                    copy.setCategoryOptionCombo(copyCategoryOptionCombo);
                } else {
                    copy.categoryOptionCombo = null;
                }
                if (this.categoryOptionComboName!= null) {
                    String sourceCategoryOptionComboName;
                    sourceCategoryOptionComboName = this.getCategoryOptionComboName();
                    String copyCategoryOptionComboName = ((String) strategy.copy(LocatorUtils.property(locator, "categoryOptionComboName", sourceCategoryOptionComboName), sourceCategoryOptionComboName));
                    copy.setCategoryOptionComboName(copyCategoryOptionComboName);
                } else {
                    copy.categoryOptionComboName = null;
                }
                if (this.valueAttribute!= null) {
                    String sourceValueAttribute;
                    sourceValueAttribute = this.getValueAttribute();
                    String copyValueAttribute = ((String) strategy.copy(LocatorUtils.property(locator, "valueAttribute", sourceValueAttribute), sourceValueAttribute));
                    copy.setValueAttribute(copyValueAttribute);
                } else {
                    copy.valueAttribute = null;
                }
                if (this.storedBy!= null) {
                    String sourceStoredBy;
                    sourceStoredBy = this.getStoredBy();
                    String copyStoredBy = ((String) strategy.copy(LocatorUtils.property(locator, "storedBy", sourceStoredBy), sourceStoredBy));
                    copy.setStoredBy(copyStoredBy);
                } else {
                    copy.storedBy = null;
                }
                if (this.timestamp!= null) {
                    String sourceTimestamp;
                    sourceTimestamp = this.getTimestamp();
                    String copyTimestamp = ((String) strategy.copy(LocatorUtils.property(locator, "timestamp", sourceTimestamp), sourceTimestamp));
                    copy.setTimestamp(copyTimestamp);
                } else {
                    copy.timestamp = null;
                }
                if (this.comment!= null) {
                    String sourceComment;
                    sourceComment = this.getComment();
                    String copyComment = ((String) strategy.copy(LocatorUtils.property(locator, "comment", sourceComment), sourceComment));
                    copy.setComment(copyComment);
                } else {
                    copy.comment = null;
                }
                if (this.followup!= null) {
                    Boolean sourceFollowup;
                    sourceFollowup = this.isFollowup();
                    Boolean copyFollowup = ((Boolean) strategy.copy(LocatorUtils.property(locator, "followup", sourceFollowup), sourceFollowup));
                    copy.setFollowup(copyFollowup);
                } else {
                    copy.followup = null;
                }
            }
            return draftCopy;
        }

        public Object createNewInstance() {
            return new DataValueSet.DataValue();
        }

    }

}
