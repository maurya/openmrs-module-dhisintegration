//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.03.05 at 12:34:44 PM IST 
//


package org.openmrs.module.dhisintegration.api.jaxb;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for OrgUnitType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="OrgUnitType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="organisationUnit" maxOccurs="unbounded" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element name="parent">
 *                     &lt;complexType>
 *                       &lt;simpleContent>
 *                         &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
 *                           &lt;attribute name="code" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                           &lt;attribute name="name" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                           &lt;attribute name="created" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                           &lt;attribute name="lastUpdated" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                           &lt;attribute name="href" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
 *                           &lt;attribute name="id" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                         &lt;/extension>
 *                       &lt;/simpleContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                   &lt;element name="openingDate" type="{http://www.w3.org/2001/XMLSchema}date" minOccurs="0"/>
 *                   &lt;element name="closedDate" type="{http://www.w3.org/2001/XMLSchema}date" minOccurs="0"/>
 *                   &lt;element name="active" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                   &lt;element name="geoCode" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *                   &lt;element name="featureType" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *                   &lt;element name="coordinates" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *                 &lt;/sequence>
 *                 &lt;attribute name="code" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="name" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="created" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="lastUpdated" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="shortName" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="level" type="{http://www.w3.org/2001/XMLSchema}byte" />
 *                 &lt;attribute name="href" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
 *                 &lt;attribute name="id" type="{http://www.w3.org/2001/XMLSchema}string" />
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "OrgUnitType", propOrder = {
    "organisationUnit"
})
public class OrgUnitType
    implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    protected List<OrgUnitType.OrganisationUnit> organisationUnit;

    /**
     * Gets the value of the organisationUnit property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the organisationUnit property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOrganisationUnit().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link OrgUnitType.OrganisationUnit }
     * 
     * 
     */
    public List<OrgUnitType.OrganisationUnit> getOrganisationUnit() {
        if (organisationUnit == null) {
            organisationUnit = new ArrayList<OrgUnitType.OrganisationUnit>();
        }
        return this.organisationUnit;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            List<OrgUnitType.OrganisationUnit> theOrganisationUnit;
            theOrganisationUnit = (((this.organisationUnit!= null)&&(!this.organisationUnit.isEmpty()))?this.getOrganisationUnit():null);
            strategy.appendField(locator, this, "organisationUnit", buffer, theOrganisationUnit);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof OrgUnitType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final OrgUnitType that = ((OrgUnitType) object);
        {
            List<OrgUnitType.OrganisationUnit> lhsOrganisationUnit;
            lhsOrganisationUnit = (((this.organisationUnit!= null)&&(!this.organisationUnit.isEmpty()))?this.getOrganisationUnit():null);
            List<OrgUnitType.OrganisationUnit> rhsOrganisationUnit;
            rhsOrganisationUnit = (((that.organisationUnit!= null)&&(!that.organisationUnit.isEmpty()))?that.getOrganisationUnit():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "organisationUnit", lhsOrganisationUnit), LocatorUtils.property(thatLocator, "organisationUnit", rhsOrganisationUnit), lhsOrganisationUnit, rhsOrganisationUnit)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            List<OrgUnitType.OrganisationUnit> theOrganisationUnit;
            theOrganisationUnit = (((this.organisationUnit!= null)&&(!this.organisationUnit.isEmpty()))?this.getOrganisationUnit():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "organisationUnit", theOrganisationUnit), currentHashCode, theOrganisationUnit);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof OrgUnitType) {
            final OrgUnitType copy = ((OrgUnitType) draftCopy);
            if ((this.organisationUnit!= null)&&(!this.organisationUnit.isEmpty())) {
                List<OrgUnitType.OrganisationUnit> sourceOrganisationUnit;
                sourceOrganisationUnit = (((this.organisationUnit!= null)&&(!this.organisationUnit.isEmpty()))?this.getOrganisationUnit():null);
                @SuppressWarnings("unchecked")
                List<OrgUnitType.OrganisationUnit> copyOrganisationUnit = ((List<OrgUnitType.OrganisationUnit> ) strategy.copy(LocatorUtils.property(locator, "organisationUnit", sourceOrganisationUnit), sourceOrganisationUnit));
                copy.organisationUnit = null;
                if (copyOrganisationUnit!= null) {
                    List<OrgUnitType.OrganisationUnit> uniqueOrganisationUnitl = copy.getOrganisationUnit();
                    uniqueOrganisationUnitl.addAll(copyOrganisationUnit);
                }
            } else {
                copy.organisationUnit = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new OrgUnitType();
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="parent">
     *           &lt;complexType>
     *             &lt;simpleContent>
     *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
     *                 &lt;attribute name="code" type="{http://www.w3.org/2001/XMLSchema}string" />
     *                 &lt;attribute name="name" type="{http://www.w3.org/2001/XMLSchema}string" />
     *                 &lt;attribute name="created" type="{http://www.w3.org/2001/XMLSchema}string" />
     *                 &lt;attribute name="lastUpdated" type="{http://www.w3.org/2001/XMLSchema}string" />
     *                 &lt;attribute name="href" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
     *                 &lt;attribute name="id" type="{http://www.w3.org/2001/XMLSchema}string" />
     *               &lt;/extension>
     *             &lt;/simpleContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *         &lt;element name="openingDate" type="{http://www.w3.org/2001/XMLSchema}date" minOccurs="0"/>
     *         &lt;element name="closedDate" type="{http://www.w3.org/2001/XMLSchema}date" minOccurs="0"/>
     *         &lt;element name="active" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *         &lt;element name="geoCode" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
     *         &lt;element name="featureType" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
     *         &lt;element name="coordinates" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
     *       &lt;/sequence>
     *       &lt;attribute name="code" type="{http://www.w3.org/2001/XMLSchema}string" />
     *       &lt;attribute name="name" type="{http://www.w3.org/2001/XMLSchema}string" />
     *       &lt;attribute name="created" type="{http://www.w3.org/2001/XMLSchema}string" />
     *       &lt;attribute name="lastUpdated" type="{http://www.w3.org/2001/XMLSchema}string" />
     *       &lt;attribute name="shortName" type="{http://www.w3.org/2001/XMLSchema}string" />
     *       &lt;attribute name="level" type="{http://www.w3.org/2001/XMLSchema}byte" />
     *       &lt;attribute name="href" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
     *       &lt;attribute name="id" type="{http://www.w3.org/2001/XMLSchema}string" />
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "parent",
        "openingDate",
        "closedDate",
        "active",
        "geoCode",
        "featureType",
        "coordinates"
    })
    public static class OrganisationUnit
        implements Cloneable, CopyTo, Equals, HashCode, ToString
    {

        @XmlElement(required = true)
        protected OrgUnitType.OrganisationUnit.Parent parent;
        @XmlSchemaType(name = "date")
        protected XMLGregorianCalendar openingDate;
        @XmlSchemaType(name = "date")
        protected XMLGregorianCalendar closedDate;
        @XmlElement(required = true)
        protected String active;
        protected String geoCode;
        protected String featureType;
        protected String coordinates;
        @XmlAttribute(name = "code")
        protected String code;
        @XmlAttribute(name = "name")
        protected String name;
        @XmlAttribute(name = "created")
        protected String created;
        @XmlAttribute(name = "lastUpdated")
        protected String lastUpdated;
        @XmlAttribute(name = "shortName")
        protected String shortName;
        @XmlAttribute(name = "level")
        protected Byte level;
        @XmlAttribute(name = "href")
        @XmlSchemaType(name = "anyURI")
        protected String href;
        @XmlAttribute(name = "id")
        protected String id;

        /**
         * Gets the value of the parent property.
         * 
         * @return
         *     possible object is
         *     {@link OrgUnitType.OrganisationUnit.Parent }
         *     
         */
        public OrgUnitType.OrganisationUnit.Parent getParent() {
            return parent;
        }

        /**
         * Sets the value of the parent property.
         * 
         * @param value
         *     allowed object is
         *     {@link OrgUnitType.OrganisationUnit.Parent }
         *     
         */
        public void setParent(OrgUnitType.OrganisationUnit.Parent value) {
            this.parent = value;
        }

        /**
         * Gets the value of the openingDate property.
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getOpeningDate() {
            return openingDate;
        }

        /**
         * Sets the value of the openingDate property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public void setOpeningDate(XMLGregorianCalendar value) {
            this.openingDate = value;
        }

        /**
         * Gets the value of the closedDate property.
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getClosedDate() {
            return closedDate;
        }

        /**
         * Sets the value of the closedDate property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public void setClosedDate(XMLGregorianCalendar value) {
            this.closedDate = value;
        }

        /**
         * Gets the value of the active property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getActive() {
            return active;
        }

        /**
         * Sets the value of the active property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setActive(String value) {
            this.active = value;
        }

        /**
         * Gets the value of the geoCode property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getGeoCode() {
            return geoCode;
        }

        /**
         * Sets the value of the geoCode property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setGeoCode(String value) {
            this.geoCode = value;
        }

        /**
         * Gets the value of the featureType property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getFeatureType() {
            return featureType;
        }

        /**
         * Sets the value of the featureType property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setFeatureType(String value) {
            this.featureType = value;
        }

        /**
         * Gets the value of the coordinates property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getCoordinates() {
            return coordinates;
        }

        /**
         * Sets the value of the coordinates property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setCoordinates(String value) {
            this.coordinates = value;
        }

        /**
         * Gets the value of the code property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getCode() {
            return code;
        }

        /**
         * Sets the value of the code property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setCode(String value) {
            this.code = value;
        }

        /**
         * Gets the value of the name property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getName() {
            return name;
        }

        /**
         * Sets the value of the name property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setName(String value) {
            this.name = value;
        }

        /**
         * Gets the value of the created property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getCreated() {
            return created;
        }

        /**
         * Sets the value of the created property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setCreated(String value) {
            this.created = value;
        }

        /**
         * Gets the value of the lastUpdated property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getLastUpdated() {
            return lastUpdated;
        }

        /**
         * Sets the value of the lastUpdated property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setLastUpdated(String value) {
            this.lastUpdated = value;
        }

        /**
         * Gets the value of the shortName property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getShortName() {
            return shortName;
        }

        /**
         * Sets the value of the shortName property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setShortName(String value) {
            this.shortName = value;
        }

        /**
         * Gets the value of the level property.
         * 
         * @return
         *     possible object is
         *     {@link Byte }
         *     
         */
        public Byte getLevel() {
            return level;
        }

        /**
         * Sets the value of the level property.
         * 
         * @param value
         *     allowed object is
         *     {@link Byte }
         *     
         */
        public void setLevel(Byte value) {
            this.level = value;
        }

        /**
         * Gets the value of the href property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getHref() {
            return href;
        }

        /**
         * Sets the value of the href property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setHref(String value) {
            this.href = value;
        }

        /**
         * Gets the value of the id property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getId() {
            return id;
        }

        /**
         * Sets the value of the id property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setId(String value) {
            this.id = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                OrgUnitType.OrganisationUnit.Parent theParent;
                theParent = this.getParent();
                strategy.appendField(locator, this, "parent", buffer, theParent);
            }
            {
                XMLGregorianCalendar theOpeningDate;
                theOpeningDate = this.getOpeningDate();
                strategy.appendField(locator, this, "openingDate", buffer, theOpeningDate);
            }
            {
                XMLGregorianCalendar theClosedDate;
                theClosedDate = this.getClosedDate();
                strategy.appendField(locator, this, "closedDate", buffer, theClosedDate);
            }
            {
                String theActive;
                theActive = this.getActive();
                strategy.appendField(locator, this, "active", buffer, theActive);
            }
            {
                String theGeoCode;
                theGeoCode = this.getGeoCode();
                strategy.appendField(locator, this, "geoCode", buffer, theGeoCode);
            }
            {
                String theFeatureType;
                theFeatureType = this.getFeatureType();
                strategy.appendField(locator, this, "featureType", buffer, theFeatureType);
            }
            {
                String theCoordinates;
                theCoordinates = this.getCoordinates();
                strategy.appendField(locator, this, "coordinates", buffer, theCoordinates);
            }
            {
                String theCode;
                theCode = this.getCode();
                strategy.appendField(locator, this, "code", buffer, theCode);
            }
            {
                String theName;
                theName = this.getName();
                strategy.appendField(locator, this, "name", buffer, theName);
            }
            {
                String theCreated;
                theCreated = this.getCreated();
                strategy.appendField(locator, this, "created", buffer, theCreated);
            }
            {
                String theLastUpdated;
                theLastUpdated = this.getLastUpdated();
                strategy.appendField(locator, this, "lastUpdated", buffer, theLastUpdated);
            }
            {
                String theShortName;
                theShortName = this.getShortName();
                strategy.appendField(locator, this, "shortName", buffer, theShortName);
            }
            {
                Byte theLevel;
                theLevel = this.getLevel();
                strategy.appendField(locator, this, "level", buffer, theLevel);
            }
            {
                String theHref;
                theHref = this.getHref();
                strategy.appendField(locator, this, "href", buffer, theHref);
            }
            {
                String theId;
                theId = this.getId();
                strategy.appendField(locator, this, "id", buffer, theId);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof OrgUnitType.OrganisationUnit)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final OrgUnitType.OrganisationUnit that = ((OrgUnitType.OrganisationUnit) object);
            {
                OrgUnitType.OrganisationUnit.Parent lhsParent;
                lhsParent = this.getParent();
                OrgUnitType.OrganisationUnit.Parent rhsParent;
                rhsParent = that.getParent();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "parent", lhsParent), LocatorUtils.property(thatLocator, "parent", rhsParent), lhsParent, rhsParent)) {
                    return false;
                }
            }
            {
                XMLGregorianCalendar lhsOpeningDate;
                lhsOpeningDate = this.getOpeningDate();
                XMLGregorianCalendar rhsOpeningDate;
                rhsOpeningDate = that.getOpeningDate();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "openingDate", lhsOpeningDate), LocatorUtils.property(thatLocator, "openingDate", rhsOpeningDate), lhsOpeningDate, rhsOpeningDate)) {
                    return false;
                }
            }
            {
                XMLGregorianCalendar lhsClosedDate;
                lhsClosedDate = this.getClosedDate();
                XMLGregorianCalendar rhsClosedDate;
                rhsClosedDate = that.getClosedDate();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "closedDate", lhsClosedDate), LocatorUtils.property(thatLocator, "closedDate", rhsClosedDate), lhsClosedDate, rhsClosedDate)) {
                    return false;
                }
            }
            {
                String lhsActive;
                lhsActive = this.getActive();
                String rhsActive;
                rhsActive = that.getActive();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "active", lhsActive), LocatorUtils.property(thatLocator, "active", rhsActive), lhsActive, rhsActive)) {
                    return false;
                }
            }
            {
                String lhsGeoCode;
                lhsGeoCode = this.getGeoCode();
                String rhsGeoCode;
                rhsGeoCode = that.getGeoCode();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "geoCode", lhsGeoCode), LocatorUtils.property(thatLocator, "geoCode", rhsGeoCode), lhsGeoCode, rhsGeoCode)) {
                    return false;
                }
            }
            {
                String lhsFeatureType;
                lhsFeatureType = this.getFeatureType();
                String rhsFeatureType;
                rhsFeatureType = that.getFeatureType();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "featureType", lhsFeatureType), LocatorUtils.property(thatLocator, "featureType", rhsFeatureType), lhsFeatureType, rhsFeatureType)) {
                    return false;
                }
            }
            {
                String lhsCoordinates;
                lhsCoordinates = this.getCoordinates();
                String rhsCoordinates;
                rhsCoordinates = that.getCoordinates();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "coordinates", lhsCoordinates), LocatorUtils.property(thatLocator, "coordinates", rhsCoordinates), lhsCoordinates, rhsCoordinates)) {
                    return false;
                }
            }
            {
                String lhsCode;
                lhsCode = this.getCode();
                String rhsCode;
                rhsCode = that.getCode();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "code", lhsCode), LocatorUtils.property(thatLocator, "code", rhsCode), lhsCode, rhsCode)) {
                    return false;
                }
            }
            {
                String lhsName;
                lhsName = this.getName();
                String rhsName;
                rhsName = that.getName();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                    return false;
                }
            }
            {
                String lhsCreated;
                lhsCreated = this.getCreated();
                String rhsCreated;
                rhsCreated = that.getCreated();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "created", lhsCreated), LocatorUtils.property(thatLocator, "created", rhsCreated), lhsCreated, rhsCreated)) {
                    return false;
                }
            }
            {
                String lhsLastUpdated;
                lhsLastUpdated = this.getLastUpdated();
                String rhsLastUpdated;
                rhsLastUpdated = that.getLastUpdated();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "lastUpdated", lhsLastUpdated), LocatorUtils.property(thatLocator, "lastUpdated", rhsLastUpdated), lhsLastUpdated, rhsLastUpdated)) {
                    return false;
                }
            }
            {
                String lhsShortName;
                lhsShortName = this.getShortName();
                String rhsShortName;
                rhsShortName = that.getShortName();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "shortName", lhsShortName), LocatorUtils.property(thatLocator, "shortName", rhsShortName), lhsShortName, rhsShortName)) {
                    return false;
                }
            }
            {
                Byte lhsLevel;
                lhsLevel = this.getLevel();
                Byte rhsLevel;
                rhsLevel = that.getLevel();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "level", lhsLevel), LocatorUtils.property(thatLocator, "level", rhsLevel), lhsLevel, rhsLevel)) {
                    return false;
                }
            }
            {
                String lhsHref;
                lhsHref = this.getHref();
                String rhsHref;
                rhsHref = that.getHref();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "href", lhsHref), LocatorUtils.property(thatLocator, "href", rhsHref), lhsHref, rhsHref)) {
                    return false;
                }
            }
            {
                String lhsId;
                lhsId = this.getId();
                String rhsId;
                rhsId = that.getId();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "id", lhsId), LocatorUtils.property(thatLocator, "id", rhsId), lhsId, rhsId)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                OrgUnitType.OrganisationUnit.Parent theParent;
                theParent = this.getParent();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "parent", theParent), currentHashCode, theParent);
            }
            {
                XMLGregorianCalendar theOpeningDate;
                theOpeningDate = this.getOpeningDate();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "openingDate", theOpeningDate), currentHashCode, theOpeningDate);
            }
            {
                XMLGregorianCalendar theClosedDate;
                theClosedDate = this.getClosedDate();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "closedDate", theClosedDate), currentHashCode, theClosedDate);
            }
            {
                String theActive;
                theActive = this.getActive();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "active", theActive), currentHashCode, theActive);
            }
            {
                String theGeoCode;
                theGeoCode = this.getGeoCode();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "geoCode", theGeoCode), currentHashCode, theGeoCode);
            }
            {
                String theFeatureType;
                theFeatureType = this.getFeatureType();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "featureType", theFeatureType), currentHashCode, theFeatureType);
            }
            {
                String theCoordinates;
                theCoordinates = this.getCoordinates();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "coordinates", theCoordinates), currentHashCode, theCoordinates);
            }
            {
                String theCode;
                theCode = this.getCode();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "code", theCode), currentHashCode, theCode);
            }
            {
                String theName;
                theName = this.getName();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName);
            }
            {
                String theCreated;
                theCreated = this.getCreated();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "created", theCreated), currentHashCode, theCreated);
            }
            {
                String theLastUpdated;
                theLastUpdated = this.getLastUpdated();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lastUpdated", theLastUpdated), currentHashCode, theLastUpdated);
            }
            {
                String theShortName;
                theShortName = this.getShortName();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "shortName", theShortName), currentHashCode, theShortName);
            }
            {
                Byte theLevel;
                theLevel = this.getLevel();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "level", theLevel), currentHashCode, theLevel);
            }
            {
                String theHref;
                theHref = this.getHref();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "href", theHref), currentHashCode, theHref);
            }
            {
                String theId;
                theId = this.getId();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "id", theId), currentHashCode, theId);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public Object clone() {
            return copyTo(createNewInstance());
        }

        public Object copyTo(Object target) {
            final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
            return copyTo(null, target, strategy);
        }

        public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
            final Object draftCopy = ((target == null)?createNewInstance():target);
            if (draftCopy instanceof OrgUnitType.OrganisationUnit) {
                final OrgUnitType.OrganisationUnit copy = ((OrgUnitType.OrganisationUnit) draftCopy);
                if (this.parent!= null) {
                    OrgUnitType.OrganisationUnit.Parent sourceParent;
                    sourceParent = this.getParent();
                    OrgUnitType.OrganisationUnit.Parent copyParent = ((OrgUnitType.OrganisationUnit.Parent) strategy.copy(LocatorUtils.property(locator, "parent", sourceParent), sourceParent));
                    copy.setParent(copyParent);
                } else {
                    copy.parent = null;
                }
                if (this.openingDate!= null) {
                    XMLGregorianCalendar sourceOpeningDate;
                    sourceOpeningDate = this.getOpeningDate();
                    XMLGregorianCalendar copyOpeningDate = ((XMLGregorianCalendar) strategy.copy(LocatorUtils.property(locator, "openingDate", sourceOpeningDate), sourceOpeningDate));
                    copy.setOpeningDate(copyOpeningDate);
                } else {
                    copy.openingDate = null;
                }
                if (this.closedDate!= null) {
                    XMLGregorianCalendar sourceClosedDate;
                    sourceClosedDate = this.getClosedDate();
                    XMLGregorianCalendar copyClosedDate = ((XMLGregorianCalendar) strategy.copy(LocatorUtils.property(locator, "closedDate", sourceClosedDate), sourceClosedDate));
                    copy.setClosedDate(copyClosedDate);
                } else {
                    copy.closedDate = null;
                }
                if (this.active!= null) {
                    String sourceActive;
                    sourceActive = this.getActive();
                    String copyActive = ((String) strategy.copy(LocatorUtils.property(locator, "active", sourceActive), sourceActive));
                    copy.setActive(copyActive);
                } else {
                    copy.active = null;
                }
                if (this.geoCode!= null) {
                    String sourceGeoCode;
                    sourceGeoCode = this.getGeoCode();
                    String copyGeoCode = ((String) strategy.copy(LocatorUtils.property(locator, "geoCode", sourceGeoCode), sourceGeoCode));
                    copy.setGeoCode(copyGeoCode);
                } else {
                    copy.geoCode = null;
                }
                if (this.featureType!= null) {
                    String sourceFeatureType;
                    sourceFeatureType = this.getFeatureType();
                    String copyFeatureType = ((String) strategy.copy(LocatorUtils.property(locator, "featureType", sourceFeatureType), sourceFeatureType));
                    copy.setFeatureType(copyFeatureType);
                } else {
                    copy.featureType = null;
                }
                if (this.coordinates!= null) {
                    String sourceCoordinates;
                    sourceCoordinates = this.getCoordinates();
                    String copyCoordinates = ((String) strategy.copy(LocatorUtils.property(locator, "coordinates", sourceCoordinates), sourceCoordinates));
                    copy.setCoordinates(copyCoordinates);
                } else {
                    copy.coordinates = null;
                }
                if (this.code!= null) {
                    String sourceCode;
                    sourceCode = this.getCode();
                    String copyCode = ((String) strategy.copy(LocatorUtils.property(locator, "code", sourceCode), sourceCode));
                    copy.setCode(copyCode);
                } else {
                    copy.code = null;
                }
                if (this.name!= null) {
                    String sourceName;
                    sourceName = this.getName();
                    String copyName = ((String) strategy.copy(LocatorUtils.property(locator, "name", sourceName), sourceName));
                    copy.setName(copyName);
                } else {
                    copy.name = null;
                }
                if (this.created!= null) {
                    String sourceCreated;
                    sourceCreated = this.getCreated();
                    String copyCreated = ((String) strategy.copy(LocatorUtils.property(locator, "created", sourceCreated), sourceCreated));
                    copy.setCreated(copyCreated);
                } else {
                    copy.created = null;
                }
                if (this.lastUpdated!= null) {
                    String sourceLastUpdated;
                    sourceLastUpdated = this.getLastUpdated();
                    String copyLastUpdated = ((String) strategy.copy(LocatorUtils.property(locator, "lastUpdated", sourceLastUpdated), sourceLastUpdated));
                    copy.setLastUpdated(copyLastUpdated);
                } else {
                    copy.lastUpdated = null;
                }
                if (this.shortName!= null) {
                    String sourceShortName;
                    sourceShortName = this.getShortName();
                    String copyShortName = ((String) strategy.copy(LocatorUtils.property(locator, "shortName", sourceShortName), sourceShortName));
                    copy.setShortName(copyShortName);
                } else {
                    copy.shortName = null;
                }
                if (this.level!= null) {
                    Byte sourceLevel;
                    sourceLevel = this.getLevel();
                    Byte copyLevel = ((Byte) strategy.copy(LocatorUtils.property(locator, "level", sourceLevel), sourceLevel));
                    copy.setLevel(copyLevel);
                } else {
                    copy.level = null;
                }
                if (this.href!= null) {
                    String sourceHref;
                    sourceHref = this.getHref();
                    String copyHref = ((String) strategy.copy(LocatorUtils.property(locator, "href", sourceHref), sourceHref));
                    copy.setHref(copyHref);
                } else {
                    copy.href = null;
                }
                if (this.id!= null) {
                    String sourceId;
                    sourceId = this.getId();
                    String copyId = ((String) strategy.copy(LocatorUtils.property(locator, "id", sourceId), sourceId));
                    copy.setId(copyId);
                } else {
                    copy.id = null;
                }
            }
            return draftCopy;
        }

        public Object createNewInstance() {
            return new OrgUnitType.OrganisationUnit();
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;simpleContent>
         *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
         *       &lt;attribute name="code" type="{http://www.w3.org/2001/XMLSchema}string" />
         *       &lt;attribute name="name" type="{http://www.w3.org/2001/XMLSchema}string" />
         *       &lt;attribute name="created" type="{http://www.w3.org/2001/XMLSchema}string" />
         *       &lt;attribute name="lastUpdated" type="{http://www.w3.org/2001/XMLSchema}string" />
         *       &lt;attribute name="href" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
         *       &lt;attribute name="id" type="{http://www.w3.org/2001/XMLSchema}string" />
         *     &lt;/extension>
         *   &lt;/simpleContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "value"
        })
        public static class Parent
            implements Cloneable, CopyTo, Equals, HashCode, ToString
        {

            @XmlValue
            protected String value;
            @XmlAttribute(name = "code")
            protected String code;
            @XmlAttribute(name = "name")
            protected String name;
            @XmlAttribute(name = "created")
            protected String created;
            @XmlAttribute(name = "lastUpdated")
            protected String lastUpdated;
            @XmlAttribute(name = "href")
            @XmlSchemaType(name = "anyURI")
            protected String href;
            @XmlAttribute(name = "id")
            protected String id;

            /**
             * Gets the value of the value property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getValue() {
                return value;
            }

            /**
             * Sets the value of the value property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setValue(String value) {
                this.value = value;
            }

            /**
             * Gets the value of the code property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getCode() {
                return code;
            }

            /**
             * Sets the value of the code property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setCode(String value) {
                this.code = value;
            }

            /**
             * Gets the value of the name property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getName() {
                return name;
            }

            /**
             * Sets the value of the name property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setName(String value) {
                this.name = value;
            }

            /**
             * Gets the value of the created property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getCreated() {
                return created;
            }

            /**
             * Sets the value of the created property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setCreated(String value) {
                this.created = value;
            }

            /**
             * Gets the value of the lastUpdated property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getLastUpdated() {
                return lastUpdated;
            }

            /**
             * Sets the value of the lastUpdated property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setLastUpdated(String value) {
                this.lastUpdated = value;
            }

            /**
             * Gets the value of the href property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getHref() {
                return href;
            }

            /**
             * Sets the value of the href property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setHref(String value) {
                this.href = value;
            }

            /**
             * Gets the value of the id property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getId() {
                return id;
            }

            /**
             * Sets the value of the id property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setId(String value) {
                this.id = value;
            }

            public String toString() {
                final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
                final StringBuilder buffer = new StringBuilder();
                append(null, buffer, strategy);
                return buffer.toString();
            }

            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }

            public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                {
                    String theValue;
                    theValue = this.getValue();
                    strategy.appendField(locator, this, "value", buffer, theValue);
                }
                {
                    String theCode;
                    theCode = this.getCode();
                    strategy.appendField(locator, this, "code", buffer, theCode);
                }
                {
                    String theName;
                    theName = this.getName();
                    strategy.appendField(locator, this, "name", buffer, theName);
                }
                {
                    String theCreated;
                    theCreated = this.getCreated();
                    strategy.appendField(locator, this, "created", buffer, theCreated);
                }
                {
                    String theLastUpdated;
                    theLastUpdated = this.getLastUpdated();
                    strategy.appendField(locator, this, "lastUpdated", buffer, theLastUpdated);
                }
                {
                    String theHref;
                    theHref = this.getHref();
                    strategy.appendField(locator, this, "href", buffer, theHref);
                }
                {
                    String theId;
                    theId = this.getId();
                    strategy.appendField(locator, this, "id", buffer, theId);
                }
                return buffer;
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof OrgUnitType.OrganisationUnit.Parent)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final OrgUnitType.OrganisationUnit.Parent that = ((OrgUnitType.OrganisationUnit.Parent) object);
                {
                    String lhsValue;
                    lhsValue = this.getValue();
                    String rhsValue;
                    rhsValue = that.getValue();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsValue), LocatorUtils.property(thatLocator, "value", rhsValue), lhsValue, rhsValue)) {
                        return false;
                    }
                }
                {
                    String lhsCode;
                    lhsCode = this.getCode();
                    String rhsCode;
                    rhsCode = that.getCode();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "code", lhsCode), LocatorUtils.property(thatLocator, "code", rhsCode), lhsCode, rhsCode)) {
                        return false;
                    }
                }
                {
                    String lhsName;
                    lhsName = this.getName();
                    String rhsName;
                    rhsName = that.getName();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                        return false;
                    }
                }
                {
                    String lhsCreated;
                    lhsCreated = this.getCreated();
                    String rhsCreated;
                    rhsCreated = that.getCreated();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "created", lhsCreated), LocatorUtils.property(thatLocator, "created", rhsCreated), lhsCreated, rhsCreated)) {
                        return false;
                    }
                }
                {
                    String lhsLastUpdated;
                    lhsLastUpdated = this.getLastUpdated();
                    String rhsLastUpdated;
                    rhsLastUpdated = that.getLastUpdated();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "lastUpdated", lhsLastUpdated), LocatorUtils.property(thatLocator, "lastUpdated", rhsLastUpdated), lhsLastUpdated, rhsLastUpdated)) {
                        return false;
                    }
                }
                {
                    String lhsHref;
                    lhsHref = this.getHref();
                    String rhsHref;
                    rhsHref = that.getHref();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "href", lhsHref), LocatorUtils.property(thatLocator, "href", rhsHref), lhsHref, rhsHref)) {
                        return false;
                    }
                }
                {
                    String lhsId;
                    lhsId = this.getId();
                    String rhsId;
                    rhsId = that.getId();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "id", lhsId), LocatorUtils.property(thatLocator, "id", rhsId), lhsId, rhsId)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    String theValue;
                    theValue = this.getValue();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theValue), currentHashCode, theValue);
                }
                {
                    String theCode;
                    theCode = this.getCode();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "code", theCode), currentHashCode, theCode);
                }
                {
                    String theName;
                    theName = this.getName();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName);
                }
                {
                    String theCreated;
                    theCreated = this.getCreated();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "created", theCreated), currentHashCode, theCreated);
                }
                {
                    String theLastUpdated;
                    theLastUpdated = this.getLastUpdated();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lastUpdated", theLastUpdated), currentHashCode, theLastUpdated);
                }
                {
                    String theHref;
                    theHref = this.getHref();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "href", theHref), currentHashCode, theHref);
                }
                {
                    String theId;
                    theId = this.getId();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "id", theId), currentHashCode, theId);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

            public Object clone() {
                return copyTo(createNewInstance());
            }

            public Object copyTo(Object target) {
                final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
                return copyTo(null, target, strategy);
            }

            public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
                final Object draftCopy = ((target == null)?createNewInstance():target);
                if (draftCopy instanceof OrgUnitType.OrganisationUnit.Parent) {
                    final OrgUnitType.OrganisationUnit.Parent copy = ((OrgUnitType.OrganisationUnit.Parent) draftCopy);
                    if (this.value!= null) {
                        String sourceValue;
                        sourceValue = this.getValue();
                        String copyValue = ((String) strategy.copy(LocatorUtils.property(locator, "value", sourceValue), sourceValue));
                        copy.setValue(copyValue);
                    } else {
                        copy.value = null;
                    }
                    if (this.code!= null) {
                        String sourceCode;
                        sourceCode = this.getCode();
                        String copyCode = ((String) strategy.copy(LocatorUtils.property(locator, "code", sourceCode), sourceCode));
                        copy.setCode(copyCode);
                    } else {
                        copy.code = null;
                    }
                    if (this.name!= null) {
                        String sourceName;
                        sourceName = this.getName();
                        String copyName = ((String) strategy.copy(LocatorUtils.property(locator, "name", sourceName), sourceName));
                        copy.setName(copyName);
                    } else {
                        copy.name = null;
                    }
                    if (this.created!= null) {
                        String sourceCreated;
                        sourceCreated = this.getCreated();
                        String copyCreated = ((String) strategy.copy(LocatorUtils.property(locator, "created", sourceCreated), sourceCreated));
                        copy.setCreated(copyCreated);
                    } else {
                        copy.created = null;
                    }
                    if (this.lastUpdated!= null) {
                        String sourceLastUpdated;
                        sourceLastUpdated = this.getLastUpdated();
                        String copyLastUpdated = ((String) strategy.copy(LocatorUtils.property(locator, "lastUpdated", sourceLastUpdated), sourceLastUpdated));
                        copy.setLastUpdated(copyLastUpdated);
                    } else {
                        copy.lastUpdated = null;
                    }
                    if (this.href!= null) {
                        String sourceHref;
                        sourceHref = this.getHref();
                        String copyHref = ((String) strategy.copy(LocatorUtils.property(locator, "href", sourceHref), sourceHref));
                        copy.setHref(copyHref);
                    } else {
                        copy.href = null;
                    }
                    if (this.id!= null) {
                        String sourceId;
                        sourceId = this.getId();
                        String copyId = ((String) strategy.copy(LocatorUtils.property(locator, "id", sourceId), sourceId));
                        copy.setId(copyId);
                    } else {
                        copy.id = null;
                    }
                }
                return draftCopy;
            }

            public Object createNewInstance() {
                return new OrgUnitType.OrganisationUnit.Parent();
            }

        }

    }

}
